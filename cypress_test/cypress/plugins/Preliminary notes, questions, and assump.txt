Preliminary notes, questions, and assumptions:

Notes: For testing in general, I generate test cases based on the following categories (in order of priority): Functional, Error Conditions, Boundaries, Performance, Accessibility, Security, Localization, Internationalization. To develop an automated UI test suite for this exercise, I'll mostly focus on Functional and Error Condition tests (Happy/Sad paths) using pseudo-Gherkin. I will put tests for the other categories (corner cases) at the end of this exercise, and include them in the automation suite if it makes sense and not add too much bloat.
First Questions: Who is the end user we're testing?
Is it a new site visitor, a free user with a Home Advisor account, and/or enterprise partner?
What are the differences (if any) for those user types and the types of Service Requests they may submit? 
Assumptions: For this test, I will assume:
The workflow is the same for all three account types listed above. 
Project types are the same for all user types
All users are directed to the same url/page after submitting a Service Request
Although only a couple elements contain the data-test attribute, I recommend all elements contain one. For the test cases, I assume data-test attributes have been assigned, even though they are not in the sample HTML provided.
First code review:

Add data-test attribute to the name, email, and budget elements to make selectors more resilient. Separate concerns. 
We could use the data-cy attribute if we're using Cypress.io and want to have 100% confidence in the selector. 
Cypress can also pick up data-test, so it's more flexible and accessible to other testing tools. 
data-test is also already in the code, so let's use this to stay consistent. 
Change input id ="email" for Budget (line 15) to input id="budget"
Functional Tests (Happy Path):
Page Load

Given: https://www.homeadvisor.com/ 
When: The url for the Service Request page is accessed
Then: <h1>Submit a HomeAdvisor Service Request</h1> loads

Name Element

Given:  data-test="name" loads
When: "Seijin Tranberg" is entered into the element
Then: The name element has passed

Email Element

Given: data-test="email" loads
When: A valid email is entered (Question for manager: Do we have an email validator we can use, or should we validate with regex "*@*.*"  ?)
          AND: the email is NOT from blacklisted email hosts (ex: disposable email hosts)
          (Note: My thinking here is that a lot of contractors and business owners will have their own domain names. We only want to exclude domain names with a high potential for abuse (ex: @mailintor.com, @yopmail.com, etc))
Then: The email element has passed

Budget Element

Given: data-test="budget" loads
When: an INT > 0 is entered (What is the max int?)
Then: The budget element has passed

Project Type

Given: data-test="project-dropdown" loads
When: the element is clicked
          AND:  <option value="roof">Roofing</option> is selected
Then: <option value="roof" selected>Roofing</option>

Submission:

Given: data-test="submit-sr"
When: The element is clicked
          AND: The required elements (Name, Email, Project Type) have been filled
Then: "/next_page" should load
          AND: (This test can be refined and built on depending on user and/or project type)



Error Conditions (Sad paths)

Blank Submission

Given:   Service Request page is accessed
When: data-test="submit-sr" is selected without entering any data
Then: An error message should appear "Please enter the required fields". With the Name, Email, and Project Type highlighted (Check with design team to see what the error messaging standard is)

Blank Name submission

Given: data-test="name" is blank
          AND: All other fields are filled out
When: The form is submitted
Then: The error message "Please enter your name" should appear

Blank Email submission

Given: data-test="email" is blank
          AND: All other form fields are filled out
When: The form is submitted
Then: The error message "Please enter your email" should appear

Bad Email submission

Given: data-test="email" loads
           AND: All other form fields are filled out
When: the input = seijin@mailinator.com
          OR: other blacklisted email hosts here
          OR: input !== "*@*.*" (Using a Regex example here. Check with devs to see how we validate)
Then: Return the error message "Please enter a valid email"

Blank Project Type submission

Given: data-test="project-dropdown" loads
           AND: All other form fields are filled out
When: No <option> contains selected
Then: Return the error message "Please select a project type"

Negative budget submission

Given: data-test="budget" loads
When: -1 (or any negative int) is entered
Then: Return the error message "Please enter a valid budget"

SQL Injection submission

Given: Any input data-test=
When: SELECT*FROM*; is entered
Then: An error message should appear "Please enter the required fields". With the Name, Email, and Project Type highlighted (Check with design team to see what the error messaging standard is).
         AND: Talk to manager about SQL injection attack
         AND: Log malicious actor from accessing homeadvisor.com

Future Test Expansion:

Other Tests we can expand to after automating the UI

Boundaries: Test long strings for the name and email fields. What is the Max int for the budget? Negative numbers? 0? Should we permit Floats?

Performance: Check to see how long it takes to submit the form, and for the user to be directed to the appropriate page. Is there a custom list of Pro's the user is directed to? How long does it take to load the custom list of Pros?

Accessibility: When CSS is being developed use ANDI to test for 4.5:1 ratio to be WCAG complaint. Also consider adding aria-label attributes to make it easier for screenreaders like JAWS/NVDA to access the content. 

Security: Form accessed via https? How is user data stored in the database? SQL injection on the form (covered in tests)

Localization: Is there a specific type of currency that the budget defaults to? USD? Canadian Dollar? Pesos? 

Internationalization: Does the page need to be tested in different languages? What kinds of email formats do we need to consider for foreign countries? (ex: email@yahoo.co.kr)


POSTMAN Tests
Change to POST 
    Go to Params
        Enter the information provided to validate the response in correct
    
Pre-request Script
Before main request, we would send a pre-request script to clear out any old params and service requests related to "grumpyoldman@gmail.com"

Tests
after request loads  
    What should the status code be. 
        Status code is 200, etc

pm.test("Respose includes results", function () {
    pm.expect(pm.response.json()).to.include.keys("results");
});

